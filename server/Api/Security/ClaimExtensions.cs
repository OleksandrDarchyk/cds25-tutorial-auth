using System.Security.Claims;
using Api.Models.Dtos.Responses;

namespace Api.Security;

// üîπ –°—Ç–∞—Ç–∏—á–Ω–∏–π –∫–ª–∞—Å –∑ –º–µ—Ç–æ–¥–∞–º–∏-—Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è–º–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ Claims
public static class ClaimExtensions
{
    // üî∏ –û—Ç—Ä–∏–º—É—î Id –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –æ–±‚Äô—î–∫—Ç–∞ ClaimsPrincipal
    public static string GetUserId(this ClaimsPrincipal claims) =>
        claims.FindFirst(ClaimTypes.NameIdentifier)!.Value;

    // üî∏ –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î –Ω–∞—à –æ–±‚Äô—î–∫—Ç AuthUserInfo —É –Ω–∞–±—ñ—Ä claims (–¥–ª—è JWT)
    public static IEnumerable<Claim> ToClaims(this AuthUserInfo user) =>
        [new("sub", user.Id.ToString()), new("role", user.Role)];

    // üî∏ –°—Ç–≤–æ—Ä—é—î ClaimsPrincipal –Ω–∞ –æ—Å–Ω–æ–≤—ñ AuthUserInfo
    public static ClaimsPrincipal ToPrincipal(this AuthUserInfo user) =>
        new ClaimsPrincipal(new ClaimsIdentity(user.ToClaims()));
}